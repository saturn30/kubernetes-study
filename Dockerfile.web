FROM node:18-alpine AS base

FROM base AS builder
RUN apk add --no-cache libc6-compat
RUN apk update
WORKDIR /app
RUN yarn global add turbo
COPY . .
RUN turbo prune --scope=web --docker

FROM base AS installer
RUN apk add --no-cache libc6-compat
RUN apk update
WORKDIR /app
COPY .gitignore .gitignore
COPY --from=builder /app/out/json/ .
RUN yarn install
COPY --from=builder /app/out/full/ .
RUN yarn turbo run build --filter=web

FROM base AS runner
WORKDIR /app
COPY --from=installer /app/@apps/web/next.config.js .
COPY --from=installer /app/@apps/web/package.json .
COPY --from=installer --chown=nextjs:nodejs /app/@apps/web/.next/standalone ./
COPY --from=installer --chown=nextjs:nodejs /app/@apps/web/.next/static ./@apps/web/.next/static
COPY --from=installer --chown=nextjs:nodejs /app/@apps/web/public ./@apps/web/public
 
EXPOSE 3000
CMD node @apps/web/server.js